version: 2

project_name: shelly-openmetrics-exporter

before:
  hooks:
    - go mod tidy
builds:
  - binary: shelly-openmetrics-exporter
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
      - arm
      - riscv64
    goarm:
      - '6'
      - '7'

gomod:
  proxy: true

sboms:
  - artifacts: archive

dockers:
  - goos: linux
    goarch: amd64
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/amd64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    image_templates:
      - "ghcr.io/cimnine/shelly-openmetrics-exporter:amd64-{{ .Tag }}"
      - "ghcr.io/cimnine/shelly-openmetrics-exporter:amd64-latest"
  - goos: linux
    goarch: arm64
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    image_templates:
      - "ghcr.io/cimnine/shelly-openmetrics-exporter:arm64-{{ .Tag }}"
      - "ghcr.io/cimnine/shelly-openmetrics-exporter:arm64-latest"
  - goos: linux
    goarch: arm
    goarm: 6
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/arm/v6"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    image_templates:
      - "ghcr.io/cimnine/shelly-openmetrics-exporter:armv6-{{ .Tag }}"
      - "ghcr.io/cimnine/shelly-openmetrics-exporter:armv6-latest"
  - goos: linux
    goarch: arm
    goarm: 7
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/arm/v7"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    image_templates:
      - "ghcr.io/cimnine/shelly-openmetrics-exporter:armv7-{{ .Tag }}"
      - "ghcr.io/cimnine/shelly-openmetrics-exporter:armv7-latest"
  - goos: linux
    goarch: riscv64
    use: buildx
    build_flag_templates:
      - "--pull"
      - "--platform=linux/riscv64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version={{.Version}}"
    image_templates:
      - "ghcr.io/cimnine/shelly-openmetrics-exporter:riscv64-{{ .Tag }}"
      - "ghcr.io/cimnine/shelly-openmetrics-exporter:riscv64-latest"
docker_manifests:
  - name_template: "ghcr.io/cimnine/shelly-openmetrics-exporter:latest"
    image_templates:
      - "ghcr.io/cimnine/shelly-openmetrics-exporter:amd64-latest"
      - "ghcr.io/cimnine/shelly-openmetrics-exporter:arm64-latest"
      - "ghcr.io/cimnine/shelly-openmetrics-exporter:armv6-latest"
      - "ghcr.io/cimnine/shelly-openmetrics-exporter:armv7-latest"
  - name_template: "ghcr.io/cimnine/shelly-openmetrics-exporter:{{ .Tag }}"
    image_templates:
      - "ghcr.io/cimnine/shelly-openmetrics-exporter:amd64-{{ .Tag }}"
      - "ghcr.io/cimnine/shelly-openmetrics-exporter:arm64-{{ .Tag }}"
      - "ghcr.io/cimnine/shelly-openmetrics-exporter:armv6-{{ .Tag }}"
      - "ghcr.io/cimnine/shelly-openmetrics-exporter:armv7-{{ .Tag }}"

archives:
  - formats:
    - tar.gz
    # this name template makes the OS and Arch compatible with the results of uname.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats:
        - zip

checksum:
  name_template: "checksums.txt"

snapshot:
  version_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

signs:
  - cmd: cosign
    signature: "${artifact}.sig"
    certificate: "${artifact}.pem"
    args:
      - sign-blob
      - '--oidc-provider=github-actions'
      - '--output-certificate=${certificate}'
      - '--output-signature=${signature}'
      - '${artifact}'
      - '--yes'
    artifacts: all
    output: false

docker_signs:
  - cmd: cosign
    args:
      - sign
      - '--oidc-provider=github-actions'
      - '--output-certificate=${certificate}'
      - "${artifact}@${digest}"
      - '--yes'
    artifacts: all
    output: false

# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj
